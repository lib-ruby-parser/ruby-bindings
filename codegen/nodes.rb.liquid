# This file is autogenerated by {{ template }}

# Root module
module LibRubyParser
  # Module with all known Node sub-types
  module Nodes
    {%- for node in nodes %}
    {{ node.comment | render_comment: "#", 4 }}
    class {{ node.camelcase_name }} < Node
      {%- for field in node.fields %}
      {%- case field.field_type -%}
      {%- when "Node" -%}
        {%- assign return_type = "Node" -%}
      {%- when "Nodes" -%}
        {%- assign return_type = "::Array<Node>" -%}
      {%- when "MaybeNode" or "RegexpOptions" -%}
        {%- assign return_type = "Node, nil" -%}
      {%- when "Loc" -%}
        {%- assign return_type = "Loc" -%}
      {%- when "MaybeLoc" -%}
        {%- assign return_type = "Loc, nil" -%}
      {%- when "Str" or "RawStr" -%}
        {%- assign return_type = "String" -%}
      {%- when "MaybeStr" or "Chars" -%}
        {%- assign return_type = "String, nil" -%}
      {%- when "StringValue" -%}
        {%- assign return_type = "String" -%}
      {%- when "U8" -%}
        {%- assign return_type = "Integer" -%}
      {%- else -%}
        {%- assign return_type = "ERROR" -%}
      {%- endcase %}
      {{ field.comment | render_comment: "#", 6 }}
      #
      # @return [{{ return_type }}]
      attr_reader :{{ field.snakecase_name }}
      {%- endfor %}
    end
{% endfor %}
  end
end
