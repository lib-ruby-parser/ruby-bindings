name: test-asan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-asan:
    name: test-asan (${{ matrix.build.ruby }})
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
    strategy:
      fail-fast: false
      matrix:
        build:
          - ruby: '3.0'
            check-ruby: ruby test/fixtures/all_nodes.rb

          - ruby: '3.1'
            check-ruby: ruby test/fixtures/all_nodes.rb

          - ruby: '3.2'
            check-ruby: ruby test/fixtures/all_nodes.rb

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.build.ruby }}
          bundler-cache: true

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: make sure asan is available
        run: |
          # just to be sure, also print what executables are linked to
          # when compiled with asan
          echo 'int main() { return 0; }' > asan-test.c
          gcc -fsanitize=address asan-test.c -o asan-test
          ldd asan-test

      - name: find libasan
        run: echo "LIBASAN=$(gcc -print-file-name=libasan.so)" >> $GITHUB_ENV

      - name: check our leaksan suppression list
        env:
          LSAN_OPTIONS: suppressions=LSan.supp
          ASAN_OPTIONS: detect_leaks=1
        run: LD_PRELOAD=$LIBASAN ${{ matrix.build.check-ruby }}

      - name: compile .so with asan
        env:
          CFLAGS: "-fsanitize=address"
        run: make dylib

      - name: run tests
        env:
          LSAN_OPTIONS: suppressions=LSan.supp
          ASAN_OPTIONS: detect_leaks=1
        run: LD_PRELOAD=$LIBASAN make test
